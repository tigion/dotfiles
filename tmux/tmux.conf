# vim: ft=tmux

# set (alias) / set-option
# setw (alias) / set-window-option
# terminal-features (tmux 3.2+) / terminal-overrides (tmux *)
# -g ... global, -s ... session, -a ... append

## terminal support

set -g default-terminal "tmux-256color"
# tmux-256color:
# - macOS: updated tmux-256color -> kitty: okay, iTerm2: okay
#   - https://gpanders.com/blog/the-definitive-guide-to-using-tmux-256color-on-macos/
# - kitty: error in Neovim health check, color issues!
# screen-256color:
# - kitty: okay -> No italic in Neovim (check again?)
# xterm-256color:
# - kitty: error in Neovim health check


set -ga terminal-features ',xterm*:RGB'  # kitty: okay, iTerm2: okay
# - ',xterm-kitty:RGB'  # kitty: okay, xterm (terminal.app): color isses
# - ',xterm-256color:RGB'

## prefix key
#set -g prefix C-Space
set -g prefix C-a
unbind C-b
#bind-key C-Space send-prefix
bind-key C-a send-prefix

## basic settings

# needed for autoread in Neovim inside tmux
set -g focus-events on

# windows, panes start with index 1, not 0
set -g base-index 1
set -g pane-base-index 1
set -g renumber-windows on
# history size
set -g history-limit 64096
#
set -sg escape-time 10
# allow the title bar to adapt to whatever host you connect to
set -g set-titles on
set -g set-titles-string "#T"
# enabling mouse support, but disables mouse support in the outer terminal (shift + click)
set -g mouse on


## theme / colors

# fg=$COLOR_RED_1
# #[fg=#{COLOR_RED_1}]
COLOR_WHITE_1=#cccccc
COLOR_WHITE_ORANGE_1=#eee8d5
COLOR_GRAY_1=#999999
COLOR_GRAY_2=#666666
COLOR_GRAY_3=#303030
COLOR_GRAY_4=#222222
COLOR_ORANGE_1=#af601a
COLOR_RED_1=#990000

# window
#set -g window-style none
#set -g window-active-style none

# pane
set -g pane-border-style fg=$COLOR_GRAY_4
set -g pane-active-border-style fg=$COLOR_ORANGE_1

# pane number display
set -g display-panes-active-colour colour33
set -g display-panes-colour colour166

# clock
setw -g clock-mode-colour colour64

## statusbar

# default
set -g status on
#set -g status-utf8 on
set -g status-interval 5
set -g status-justify left
set -g status-style fg=$COLOR_GRAY_2,bg=$COLOR_GRAY_4  # bg=terminal

# left
set -g status-left-length 100
set -g status-left-style none

# " 0  ... "
set -g status-left "\
#{?#(echo $SSH_CLIENT),#[fg=#{COLOR_WHITE_1}]#[bg=#{COLOR_RED_1}],#[fg=#{COLOR_GRAY_4}]#[bg=#{COLOR_WHITE_1}]}#[bold] #S \
#{?#(echo $SSH_CLIENT),#[fg=#{COLOR_RED_1}],#[fg=#{COLOR_WHITE_1}]}#[bg=#{COLOR_GRAY_1},nobold,nounderscore,noitalics]\
#[fg=#{COLOR_GRAY_4},bg=#{COLOR_GRAY_1}] #(whoami) \
#[fg=#{COLOR_GRAY_1},bg=#{COLOR_GRAY_4}]"

# right
set -g status-right-length 100
set -g status-right-style none

# " ... ┊ ...  ... "
set -g status-right "\
#[fg=#{COLOR_GRAY_1},bg=#{COLOR_GRAY_4},nobold,nounderscore,noitalics]\
#[fg=#{COLOR_GRAY_4},bg=#{COLOR_GRAY_1},nobold,nounderscore,noitalics] #( ~/.config/tmux/cpu_temp.sh ) ┊ %H:%M \
#[bg=#{COLOR_GRAY_1},nobold,nounderscore,noitalics]#{?#(echo $SSH_CLIENT),#[fg=#{COLOR_RED_1}],#[fg=#{COLOR_WHITE_1}]}\
#[,bold]#{?#(echo $SSH_CLIENT),#[fg=#{COLOR_WHITE_1}]#[bg=#{COLOR_RED_1}],#[fg=#{COLOR_GRAY_4}]#[bg=#{COLOR_WHITE_1}]} #h "

# window
setw -g window-status-separator ""
setw -g window-status-style none
setw -g window-status-current-style none
setw -g window-status-last-style none
setw -g window-status-activity-style none
setw -g window-status-bell-style none

# " 1┊nvim  ... "
setw -g window-status-format "\
#[fg=#{COLOR_GRAY_4},bg=#{COLOR_GRAY_3}]\
#[fg=default,bg=#{COLOR_GRAY_3}] #I#[fg=#{COLOR_GRAY_4}]┊#[fg=default,bg=#{COLOR_GRAY_3}]#(~/.config/tmux/cmd_symbol.sh #{b:pane_current_command}) \
#[fg=#{COLOR_GRAY_4}]\
#[fg=default,bg=#{COLOR_GRAY_3}] #(~/.config/tmux/path_basename.sh #{pane_current_path}) \
#[fg=#{COLOR_GRAY_3},bg=#{COLOR_GRAY_4},nobold,nounderscore,noitalics]"

# " 1┊nvim  ... "
setw -g window-status-current-format "\
#[fg=#{COLOR_GRAY_4},bg=#{COLOR_WHITE_ORANGE_1}]\
#[fg=#{COLOR_ORANGE_1},bg=#{COLOR_WHITE_ORANGE_1}] #I┊#(~/.config/tmux/cmd_symbol.sh #{b:pane_current_command}) #{?window_zoomed_flag,,}\
#[fg=#{COLOR_WHITE_ORANGE_1}]#[bg=#{COLOR_ORANGE_1}] \
#(~/.config/tmux/path_basename.sh #{pane_current_path}) \
#[fg=#{COLOR_ORANGE_1},bg=#{COLOR_GRAY_4},nobold,nounderscore,noitalics]"

# mode
set -g mode-style fg=$COLOR_GRAY_2,bg=$COLOR_GRAY_4

# message
set -g message-style fg=$COLOR_GRAY_2,bg=$COLOR_GRAY_4
set -g message-command-style fg=$COLOR_GRAY_2,bg=$COLOR_GRAY_4

## vim movements
setw -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection
# bind-key -T copy-mode-vi 'y' send -X copy-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel
bind-key -T copy-mode-vi 'r' send-keys -X rectangle-toggle
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel
# unbind -T copy-mode-vi MouseDragEnd1Pane # don't exit copy mode after dragging with mouse

## Key bindings

# Set new panes to open in current directory
# bind '"' split-window -c "#{pane_current_path}"
# bind % split-window -h -c "#{pane_current_path}"
bind h split-window -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"

# copy mode
bind Enter copy-mode
bind ü copy-mode

# Reload settings
bind r source-file ~/.config/tmux/tmux.conf \; display "Tmux config reloaded!"
# Display lazygit
bind -r g display-popup -d '#{pane_current_path}' -w80% -h80% -E lazygit

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator

# decide whether we're in a Vim process
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
bind-key -T copy-mode-vi 'C-Space' select-pane -t:.+
